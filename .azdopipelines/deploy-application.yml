trigger: none
#- master

pool:
  vmImage: ubuntu-latest
variables:
 resourceGroupName: "api-management-demo"
 location: "westeurope"
 APP_NAME: "solar"
 APP_ENV: "uat"
 acaEnvName: "$(APP_NAME)-appenv-$(APP_ENV)" 
 imageName: "todo-api"
 tag: "$(Build.BuildId)"
 containerRegistryName: "$(APP_NAME)contregistry$(APP_ENV)"
 registry: "$(containerRegistryName).azurecr.io" 
 

stages:
  - stage: BuildContainer
    displayName: 'Build Container and pushes to registry'
    jobs:
    - job: Build
      displayName: 'Build Job'
      steps:
      - checkout: self
      - bash: 'az login --service-principal -u $(sp_client_id) -p $(sp_client_secret) --tenant $(sp_tenant_id)'
      - task: Bash@3
        displayName: Build docker image for TODO API and push to Azure container registry 
        inputs:
          targetType: filePath
          filePath: 'src/Infrastructure/Scripts/build-containers.sh'
          workingDirectory: 'src/TodoApi'
        env:
            imageName: $(imageName)
            tag: $(tag)
            registry: $(registry)
            

  - stage: DeployToDoApiStage
    displayName: 'Deploy ToDo API'
    jobs:
      - deployment: DeployToDoApiJob
        displayName: 'Deploy ToDo API'
        environment: AEGIS-DEV
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - bash: 'az login --service-principal -u $(sp_client_id) -p $(sp_client_secret) --tenant $(sp_tenant_id)'
                - task: Bash@3
                  displayName: Deploy containerapp to ACA
                  inputs:
                    targetType: filePath
                    filePath: 'src/Infrastructure/Scripts/deploy-containerapp.sh'
                  env:
                    APP_NAME: $(APP_NAME)
                    APP_ENV: $(APP_ENV)
                    imageName: $(imageName)
                    tagName: $(tag)
                    location: $(location)
                    resourceGroupName: $(resourceGroupName)                
                - task: Bash@3
                  displayName: Update API management
                  inputs:
                    targetType: filePath
                    filePath: 'src/Infrastructure/Scripts/update-api.sh'
                  env:
                    primaryMode: "yes"
                    APP_NAME: $(APP_NAME)
                    APP_ENV: $(APP_ENV)
                    imageName: $(imageName)
                    tag: $(tag)
                    location: $(location)
                    resourceGroupName: $(resourceGroupName)